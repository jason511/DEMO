// <auto-generated />
using System;
using DemoWebApplication.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DemoWebApplication.Migrations
{
    [DbContext(typeof(test1Context))]
    partial class test1ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DemoWebApplication.Models.answers", b =>
                {
                    b.Property<int>("answer_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("answer")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("answered_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("question_id")
                        .HasColumnType("int");

                    b.Property<int?>("score")
                        .HasColumnType("int");

                    b.Property<int?>("survey_id")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("int");

                    b.Property<int?>("user_id")
                        .HasColumnType("int");

                    b.HasKey("answer_id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "question_id" }, "question_id");

                    b.HasIndex(new[] { "survey_id" }, "survey_id");

                    b.HasIndex(new[] { "user_id" }, "user_id");

                    b.ToTable("answers");
                });

            modelBuilder.Entity("DemoWebApplication.Models.evaluations", b =>
                {
                    b.Property<int>("evaluation_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("evaluated_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("recommendation")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("total_score")
                        .HasColumnType("int");

                    b.Property<int?>("user_id")
                        .HasColumnType("int");

                    b.HasKey("evaluation_id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "user_id" }, "user_id")
                        .HasDatabaseName("user_id1");

                    b.ToTable("evaluations");
                });

            modelBuilder.Entity("DemoWebApplication.Models.questions", b =>
                {
                    b.Property<int>("question_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("category")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("created_by")
                        .HasColumnType("int");

                    b.Property<string>("difficulty_level")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasDefaultValueSql("'Medium'");

                    b.Property<string>("question_text")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("updated_at")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("question_id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "created_by" }, "created_by");

                    b.ToTable("questions");
                });

            modelBuilder.Entity("DemoWebApplication.Models.users", b =>
                {
                    b.Property<int>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("password_hash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("updated_at")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("user_id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "email" }, "email")
                        .IsUnique();

                    b.ToTable("users");
                });

            modelBuilder.Entity("DemoWebApplication.Models.answers", b =>
                {
                    b.HasOne("DemoWebApplication.Models.questions", "question")
                        .WithMany("answers")
                        .HasForeignKey("question_id")
                        .HasConstraintName("answers_ibfk_2");

                    b.HasOne("DemoWebApplication.Models.users", "user")
                        .WithMany("answers")
                        .HasForeignKey("user_id")
                        .HasConstraintName("answers_ibfk_1");

                    b.Navigation("question");

                    b.Navigation("user");
                });

            modelBuilder.Entity("DemoWebApplication.Models.evaluations", b =>
                {
                    b.HasOne("DemoWebApplication.Models.users", "user")
                        .WithMany("evaluations")
                        .HasForeignKey("user_id")
                        .HasConstraintName("evaluations_ibfk_1");

                    b.Navigation("user");
                });

            modelBuilder.Entity("DemoWebApplication.Models.questions", b =>
                {
                    b.HasOne("DemoWebApplication.Models.users", "created_byNavigation")
                        .WithMany("questions")
                        .HasForeignKey("created_by")
                        .HasConstraintName("questions_ibfk_1");

                    b.Navigation("created_byNavigation");
                });

            modelBuilder.Entity("DemoWebApplication.Models.questions", b =>
                {
                    b.Navigation("answers");
                });

            modelBuilder.Entity("DemoWebApplication.Models.users", b =>
                {
                    b.Navigation("answers");

                    b.Navigation("evaluations");

                    b.Navigation("questions");
                });
#pragma warning restore 612, 618
        }
    }
}
